<!--
 Copyright 2020 Google LLC
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     https://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
{% extends 'layout.njk' %}

{% block content %}
  <h1>TTFB Test</h1>
  <p>
    <img src="/test/img/square.png{% if imgDelay %}?delay={{imgDelay}}{% endif %}">
  </p>

  <p>Text below the image</p>

  <p><a id="navigate-away" href="https://example.com">Navigate away</a></p>

  <script>
    // Set the blocking values based on query params if present.
    const params = new URLSearchParams(location.search);

    if (params.has('responseStart')) {
      const navEntry = performance.getEntriesByType('navigation')[0];
      Object.defineProperty(navEntry, 'responseStart', {
        value: Number(params.get('responseStart')),
      });
    }
  </script>

  <script type="module">
    import {onTTFB} from '{{ modulePath }}';

    function jsonifyEntry(entry) {
      const newObj = {};
      for (const k in entry) {
        if (typeof entry[k] !== 'function') {
          newObj[k] = entry[k];
        }
      }
      return newObj;
    }

    (async function() {
      {% if awaitLoad %}
        await new Promise((resolve) => addEventListener('load', resolve));
      {% endif %}

      onTTFB((ttfb) => {
        // Log for easier manual testing.
        console.log(ttfb);

        // The stubbed `activationStart` is lost when stringified, so we convert first.
        ttfb.entries = ttfb.entries.map(jsonifyEntry);
        if (ttfb.attribution && ttfb.attribution.navigationEntry) {
          ttfb.attribution.navigationEntry = jsonifyEntry(ttfb.attribution.navigationEntry);
        }

        // Test sending the metric to an analytics endpoint.
        navigator.sendBeacon(`/collect`, JSON.stringify(ttfb));
      }, {reportAllChanges: self.__reportAllChanges});
    }());
  </script>
{% endblock %}
